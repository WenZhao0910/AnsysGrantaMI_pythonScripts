{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Create Records\n",
    "Create records and delete (or withdraw) them in bulk."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Specify a table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-07-15T09:42:39.472571Z",
     "iopub.status.busy": "2021-07-15T09:42:39.469559Z",
     "iopub.status.idle": "2021-07-15T09:42:41.446063Z",
     "shell.execute_reply": "2021-07-15T09:42:41.446063Z"
    }
   },
   "outputs": [],
   "source": [
    "from datetime import datetime\n",
    "from GRANTA_MIScriptingToolkit import granta as mpy\n",
    "\n",
    "mi = mpy.connect('http://localhost/mi_servicelayer', autologon=True)\n",
    "table = mi.get_db(db_key=\"MI_Training\").get_table(\"Files for Training\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Create records\n",
    "Decide which folder the new records will be added to (you can use the table itself as a parent for a 'top-level' record)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-07-15T09:42:41.449062Z",
     "iopub.status.busy": "2021-07-15T09:42:41.449062Z",
     "iopub.status.idle": "2021-07-15T09:42:41.600208Z",
     "shell.execute_reply": "2021-07-15T09:42:41.601209Z"
    }
   },
   "outputs": [],
   "source": [
    "parent = table.search_for_records_by_name(\"Other\")[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Create five new **Record** objects."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-07-15T09:42:41.609208Z",
     "iopub.status.busy": "2021-07-15T09:42:41.603214Z",
     "iopub.status.idle": "2021-07-15T09:42:41.616209Z",
     "shell.execute_reply": "2021-07-15T09:42:41.616209Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<Record long name:STK Example 6:Thu Jul 15 10:42:41 2021 - 0>,\n",
       " <Record long name:STK Example 6:Thu Jul 15 10:42:41 2021 - 1>,\n",
       " <Record long name:STK Example 6:Thu Jul 15 10:42:41 2021 - 2>,\n",
       " <Record long name:STK Example 6:Thu Jul 15 10:42:41 2021 - 3>,\n",
       " <Record long name:STK Example 6:Thu Jul 15 10:42:41 2021 - 4>]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "now = datetime.now().strftime(\"%c\")\n",
    "recordNames = ['STK Example 6:{} - {}'.format(now, i) for i in range(5)]\n",
    "new_records = [table.create_record(n, parent=parent, subsets={\"All files\"}) for n in recordNames]\n",
    "new_records"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Write your changes to MI \n",
    "The new records are created on the server when update() is called."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-07-15T09:42:41.621209Z",
     "iopub.status.busy": "2021-07-15T09:42:41.620209Z",
     "iopub.status.idle": "2021-07-15T09:42:42.790395Z",
     "shell.execute_reply": "2021-07-15T09:42:42.790395Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "new records:\n",
      "http://localhost/mi/datasheet.aspx?dbKey=MI_Training&recordHistoryGuid=f4f40a06-055a-4993-be0e-d5b4ad45268c\n",
      "http://localhost/mi/datasheet.aspx?dbKey=MI_Training&recordHistoryGuid=cd15c25a-ac1b-430d-b690-661012bb5b32\n",
      "http://localhost/mi/datasheet.aspx?dbKey=MI_Training&recordHistoryGuid=88b27f41-fed6-441d-81c7-2f2e90c7519a\n",
      "http://localhost/mi/datasheet.aspx?dbKey=MI_Training&recordHistoryGuid=5d05d066-397c-447e-9490-87e5b066684a\n",
      "http://localhost/mi/datasheet.aspx?dbKey=MI_Training&recordHistoryGuid=dbbeabb1-81e9-4191-bb56-647f89a147d4\n"
     ]
    }
   ],
   "source": [
    "recs = mi.update(new_records)\n",
    "\n",
    "print(\"new records:\")\n",
    "for rec in recs:\n",
    "    print(rec.viewer_url)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Delete the records\n",
    "This method interacts directly with the server; updating is not necessary. If the table is version-controlled, the records are withdrawn instead."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-07-15T09:42:42.793675Z",
     "iopub.status.busy": "2021-07-15T09:42:42.792679Z",
     "iopub.status.idle": "2021-07-15T09:42:44.326132Z",
     "shell.execute_reply": "2021-07-15T09:42:44.326132Z"
    }
   },
   "outputs": [],
   "source": [
    "mi.bulk_delete_or_withdraw_records(recs)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
